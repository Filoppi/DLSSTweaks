; DLSSTweaks by emoose - https://github.com/emoose/DLSSTweaks
; Wrapper DLL that can force DLAA onto DLSS-supported games, along with tweaking the scaling ratios & presets used by them

; The default dxgi.dll filename should hopefully work for the majority of games, otherwise you can try renaming it to any of the following:
; - XInput1_3.dll
; - XInput9_1_0.dll
; - XAPOFX1_5.dll
; - X3DAudio1_7.dll
; - dxgi.dll
; - winmm.dll
; If you have a game that doesn't work with any of these please let me know!

; DLSSTweaks was built for DLSS 3.1.1, but should work on earlier versions too
; The preset overrides will only work on 3.1.1 and newer however

; It's recommended to test the game with the dev DLSS DLL + OverrideDlssHud to make sure tweaks here are being applied
; If it works with dev DLL you can then switch to the regular release DLL fine
; dev DLL is available at https://github.com/NVIDIA/DLSS/tree/main/lib/Windows_x86_64/dev

[DLSS]
; ForceDLAA: forces all DLSS quality modes to act as DLAA instead, making the game render in full-res, while DLSS applies itself over it
; Should help with games that support DLSS scaling but not DLAA itself
; To use this just enable DLSS mode in the game, any quality should be fine, they should all render at full-res
; (certain modes might make the game use different mip biasing settings though, so feel free to experiment with them!)
; Hopefully if the game respects the resolution DLSS returns, it should then allow DLAA to be activated fine
; You can confirm whether DLAA is active by using the dev DLL + OverrideDlssHud, the debug text should mention DLAA if it's being used
; Preset F is recommended for use with DLAA, you can set that in the section below
; (If the game has problems running with full-res DLAA it could be worth trying DLSSQualityLevels at 0.99 instead)
ForceDLAA = false

; OverrideAutoExposure: allows forcing DLSS auto-exposure to be enabled/disabled/left at default
; May help with issues where DLSS2 games would fail to activate auto-exposure with DLSS3.1
; Set to 0 to leave it at default, 1 to force enable, or -1 to force disable
OverrideAutoExposure = 0

; OverrideAppId: for some games DLSS might force certain DLSS presets, even if game tries overriding via DLSS_Hint_Render_Preset_XXX (which is the method we use)
; Which may prevent our DLSSPresets tweaks from being applied (ForceDLAA / DLSSQualityLevels should still work fine without needing this)
; To get around that you can enable OverrideAppId to make DLSS think that this is a generic title instead
; Titles that are known to require this for DLSSPresets to work:
; - Dying Light 2
; - Shadow of the Tomb Raider
; - Death Stranding
; - Cyberpunk 2077
OverrideAppId = false

; OverrideDlssHud: allows force enabling/disabling the DLSS debug display HUD
; Works with both release & dev DLSS DLL types
; Set to 0 to leave it at default, 1 to force enable, or -1 to force disable
OverrideDlssHud = 0

; DisableDevWatermark: removes watermark shown when using dev DLL
DisableDevWatermark = false

; OverrideDlssDll: allows overriding the path to load the nvngx_dlss.dll file from
; Some game launchers such as RGL may overwrite the nvngx_dlss.dll on launch, preventing you from changing the version
; To workaround that you can uncomment the line below & copy your new DLSS DLL to nvngx_dlss_new.dll, and hopefully game should load it in fine
; (recommend testing with OverrideDlssHud to make sure your new DLL is loaded in)
; If it fails to load you can also try specifying an exact file path too
;OverrideDlssDll = nvngx_dlss_new.dll

; WatchIniUpdates: watches the dlsstweaks.ini file for updates & tries applying changes during runtime
; Should allow you to change presets or quality ratios / DLAA during gameplay, by simply editing the dlsstweaks.ini while it's running
; Depends on the game whether updates will actually apply or not, some titles may work immediately, while others may need to have DLSS mode changed in the in-game settings first
; Unfortunately many titles can't have ForceDLAA/DLSSQualityLevels changed at runtime with this, but DLSSPresets should hopefully update fine
WatchIniUpdates = false

[DLSSQualityLevels]
; Allows overriding the ratios that DLSS uses for each quality level
; Must be enabled first (and ForceDLAA must be disabled for this to take effect)
Enable = false

; Ratios/multipliers applied to each axis of screen resolution
; Set to 1 to force this quality level to use full resolution (ie. DLAA)
; ForceDLAA must be disabled above for these to take effect!
UltraPerformance = 0.33333334
Performance = 0.5
Balanced = 0.58
Quality = 0.66666667

; UltraQuality: some games may allow this to be chosen if uncommented and set to non-zero value
; Normally DLSS wouldn't allow UltraQuality to render properly, but DLSSTweaks can let it think that MaxQuality is used instead
; while still applying the UltraQuality ratio you choose for it, giving you an extra DLSS quality level to customize
; (very few games will allow you to select this though, and the ones that do haven't been fully tested yet, so treat this as experimental)
; UltraQuality = 0.77

[DLSSPresets]
; Overrides the DLSS preset used for each quality level, set to Default to leave the preset set to whatever game/DLSS decided for it
; Or set to A / B / C / D / F to try forcing that preset instead.
; Presets were added in DLSS 3.1, these are essentially the different kinds of DLSS 2.x DLL versions, all merged into 3.1 as these presets
; (so eg. instead of picking the best quality DLSS DLL for your game, you'd just find the right preset for it instead)
; See https://www.reddit.com/r/nvidia/comments/10z2ra9/nvidia_publishes_dlss_super_resolution_sdk_31/j81f9te/ for descriptions of each preset

; Unfortunately DLSS tends to override these presets with ones decided by NVIDIA instead
; Enabling the OverrideAppId tweak above might help with those
; (recommend testing with the dev DLSS DLL along with OverrideDlssHud tweak to make sure the preset is being overridden properly)

; Note that some games could have graphical artefacts when certain DLSS presets are overridden onto them
; There's not much DLSSTweaks can do to help with that unfortunately, hopefully trying a different preset could help

DLAA = Default
Quality = Default
Balanced = Default
Performance = Default
UltraPerformance = Default
