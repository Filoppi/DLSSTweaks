; DLSSTweaks by emoose - https://github.com/emoose/DLSSTweaks
; Wrapper DLL that can force DLAA onto DLSS-supported games, along with tweaking the presets used by them

; The default dxgi.dll filename should hopefully work for the majority of games, otherwise you can try renaming it to any of the following:
; - XInput1_3.dll
; - XInput9_1_0.dll
; - XAPOFX1_5.dll
; - X3DAudio1_7.dll
; - dxgi.dll
; - winmm.dll
; If you have a game that doesn't work with any of these please let me know!

; DLSSTweaks was built for DLSS 3.1.1, but should work on earlier versions too
; The preset overrides will only work on 3.1.1 and newer however

; It's recommended to test the game with the dev DLSS DLL + ngx_driver_onscreenindicator.reg to make sure tweaks here are being applied
; If it works with dev DLL you can then switch to the regular release DLL fine
; dev DLL is available at https://github.com/NVIDIA/DLSS/tree/main/lib/Windows_x86_64/dev
; reg file at https://github.com/NVIDIA/DLSS/blob/main/utils/ngx_driver_onscreenindicator.reg

[DLSS]
; ForceDLAA: forces all DLSS quality modes to act as DLAA instead, making the game render in full-res, while DLSS applies itself over it
; Should help with games that support DLSS scaling but not DLAA itself
; To use this just enable DLSS mode in the game, any quality should be fine, they should all render at full-res
; (certain modes might make the game use different mip biasing settings though, so feel free to experiment with them!)
; Hopefully if the game respects the resolution DLSS returns, it should then allow DLAA to be activated fine
; You can confirm whether DLAA is active by using the dev DLL + reg file, the overlay should mention DLAA if it's being used
; Preset F is recommended for use with DLAA, you can set that in the section below
ForceDLAA = false

; OverrideAutoExposure: allows forcing DLSS auto-exposure to be enabled/disabled/left at default
; May help with issues where DLSS2 games would fail to activate auto-exposure with DLSS3.1
; Set to 0 to leave it at default, 1 to force enable it, or -1 to force disable it
OverrideAutoExposure = 0

; OverrideAppId: for some games DLSS will always force certain DLSS presets, even if game tries overriding via DLSS_Hint_Render_Preset_XXX (which is the method we use)
; To get around that you can enable OverrideAppId to make DLSS think that this is a generic title instead
; Titles that are known to require this:
; - Dying Light 2
; - Shadow of the Tomb Raider
; - Death Stranding
; - Cyberpunk 2077
OverrideAppId = false

; DebugLog: writes log entries into dlsstweaks.log
; Can be useful to check whether DLSSTweaks is actually loading into the game or not
DebugLog = true

; WatchIniUpdates: watches the dlsstweaks.ini file for updates & tries applying any changes during runtime
; This should allow you to switch presets or quality ratios / DLAA during gameplay, by simply editing the dlsstweaks.ini while it's running
; Depends on the game whether updates will actually apply or not, some titles may work immediately, while others may need to have DLSS mode changed in the in-game settings first
WatchIniUpdates = false

[DLSSQualityLevels]
; Allows overriding the ratios that DLSS uses for each quality level
; Must be enabled first (and ForceDLAA must be disabled for this to take effect)
Enable = false

; Ratios/multipliers applied to each axis of screen resolution
; Set to 1 to force this quality level to use full resolution (ie. DLAA)
; ForceDLAA must be disabled above for these to take effect!
UltraPerformance = 0.33333334
Performance = 0.5
Balanced = 0.58
Quality = 0.66666667

[DLSSPresets]
; Overrides the DLSS preset used for each quality level, set to Default to leave the preset set to whatever game/DLSS decided for it
; Or set to A / B / C / D / F to try forcing that preset instead.
; Presets were added in DLSS 3.1, similar to the old method of swapping out different DLSS DLL versions, now instead you can just set a preset for it

; Unfortunately DLSS might override these presets with ones decided by NVIDIA instead
; Enabling OverrideAppId above might help with those (at least it fixes DL2)
; (recommend testing with the dev DLSS DLL along with ngx_driver_onscreenindicator.reg to make sure the preset is being overridden properly)

; Note that some games could have graphical artefacts when certain DLSS presets are overridden onto them
; There's not much DLSSTweaks can do to help with that unfortunately, hopefully trying a different preset could help

DLAA = Default
Quality = Default
Balanced = Default
Performance = Default
UltraPerformance = Default
