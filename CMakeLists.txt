# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(dlsstweaks-proj)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MP")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")

set(ASMJIT_STATIC ON CACHE BOOL "" FORCE)

if ("${CMAKE_BUILD_TYPE}" MATCHES "Release")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MT")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MT")

    # Statically compile runtime
    string(REGEX REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    string(REGEX REPLACE "/MD" "/MT" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
    string(REGEX REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
    string(REGEX REPLACE "/MD" "/MT" CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}")

    set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded")
    message(NOTICE "Building in Release mode")
endif()

include(FetchContent)

message(STATUS "Fetching bddisasm (v1.34.10)...")
FetchContent_Declare(bddisasm
	GIT_REPOSITORY
		"https://github.com/bitdefender/bddisasm"
	GIT_TAG
		v1.34.10
)
FetchContent_MakeAvailable(bddisasm)

message(STATUS "Fetching safetyhook (35d28aab6d10f9ed17499df8461c92721f0db025)...")
FetchContent_Declare(safetyhook
	GIT_REPOSITORY
		"https://github.com/cursey/safetyhook"
	GIT_TAG
		35d28aab6d10f9ed17499df8461c92721f0db025
)
FetchContent_MakeAvailable(safetyhook)

# Target: spdlog
set(spdlog_SOURCES
	"external/spdlog/src/async.cpp"
	"external/spdlog/src/bundled_fmtlib_format.cpp"
	"external/spdlog/src/cfg.cpp"
	"external/spdlog/src/color_sinks.cpp"
	"external/spdlog/src/file_sinks.cpp"
	"external/spdlog/src/spdlog.cpp"
	"external/spdlog/src/stdout_sinks.cpp"
	cmake.toml
)

add_library(spdlog STATIC)

target_sources(spdlog PRIVATE ${spdlog_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${spdlog_SOURCES})

target_compile_definitions(spdlog PUBLIC
	SPDLOG_COMPILED_LIB
)

target_include_directories(spdlog PUBLIC
	"external/spdlog/include"
)

# Target: dlsstweaks
set(dlsstweaks_SOURCES
	"src/DllMain.cpp"
	"src/Proxy.cpp"
	"src/Utility.cpp"
	"src/Proxy.def"
	"src/Resource.rc"
	"external/ModUtils/Patterns.cpp"
	"src/Proxy.hpp"
	"src/Utility.hpp"
	"src/resource.h"
	"external/ModUtils/Patterns.h"
	cmake.toml
)

add_library(dlsstweaks SHARED)

target_sources(dlsstweaks PRIVATE ${dlsstweaks_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${dlsstweaks_SOURCES})

target_compile_definitions(dlsstweaks PUBLIC
)

target_compile_features(dlsstweaks PUBLIC
	cxx_std_20
)

target_compile_options(dlsstweaks PUBLIC
	"/GS-"
	"/bigobj"
	"/EHa"
	"/MP"
)

target_include_directories(dlsstweaks PUBLIC
	"shared/"
	"src/"
	"include/"
	"external/ModUtils/"
	"external/ini-cpp/ini/"
)

target_link_libraries(dlsstweaks PUBLIC
	spdlog
	safetyhook
)

target_link_options(dlsstweaks PUBLIC
	"/DEBUG"
	"/OPT:REF"
	"/OPT:ICF"
)

set_target_properties(dlsstweaks PROPERTIES
	OUTPUT_NAME
		nvngx
	RUNTIME_OUTPUT_DIRECTORY_RELEASE
		"${CMAKE_BINARY_DIR}/bin/${CMKR_TARGET}"
	RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO
		"${CMAKE_BINARY_DIR}/bin/${CMKR_TARGET}"
	LIBRARY_OUTPUT_DIRECTORY_RELEASE
		"${CMAKE_BINARY_DIR}/lib/${CMKR_TARGET}"
	LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO
		"${CMAKE_BINARY_DIR}/lib/${CMKR_TARGET}"
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE
		"${CMAKE_BINARY_DIR}/lib/${CMKR_TARGET}"
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO
		"${CMAKE_BINARY_DIR}/lib/${CMKR_TARGET}"
)

